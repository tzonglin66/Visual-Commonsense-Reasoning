# 作 者：田宗林
# 时 间：2021/10/28
# Python 异常
# 帮助文档位于：Python 标准库 ----> 内置异常
"""
异常是中断代码块的正常控制流程以便处理错误或其他异常条件的一种方式
异常会在错误被检测到的位置引发，它可以被当前包围代码块或是任何直接或间接发起调用发生错误的代码块的其他代码块所处理
Python 解析器会在检测到运行时错误（例如零作为被除数）的时候引发异常
Python 程序也可以通过 raise 语句显式地引发异常
异常处理是通过 try ... except 语句来指定的
    该语句的 finally 子句可被用来指定清理代码，它并不处理异常，而是无论之前的代码是否发生异常都会被执行

# Python 内置异常
在 Python 中，所有异常必须为一个派生自 BaseException 的类的实例
在带有提及一个特定类的 except 子句的 try 语句中，该子句也会处理任何派生自该类的异常类（但不处理它所派生出的异常类）
内置异常可通过解释器或内置函数来生成，它们都会具有一个提示导致错误详细原因的"关联值"
    这可以是一个字符串或由多个信息项（例如一个错误码和一个解释错误的字符串）组成的元组，关联值通常会作为参数被传递给异常类的构造器
用户代码可以引发内置异常
    这可被用于测试异常处理程序或报告错误条件，"就像"在解释器引发了相同异常的情况时一样
内置异常类可以被子类化以定义新的异常；鼓励程序员从Exception 类或它的某个子类而不是从 BaseException 来派生新的异常
"""
"""
# 基类
1. BaseException
    所有内置异常的基类，如果在此类的实例上调用 str()，则会返回实例的参数表示，或者当没有参数时返回空字符串
    args
        传给异常构造器的参数元组
    with_traceback(tb)
        此方法会将 tb 设为新的异常回溯信息并返回异常对象
2. Exception
    所有内置的非系统退出类异常都派生自此类，所有用户自定义异常也应当派生自此类
3. ...
# 具体（常见）异常
1. IndexError
    当序列抽取超出范围时将被引发
2. TypeError
    当一个操作或函数被应用于类型不适当的对象时将被引发。 关联的值是一个字符串，给出有关类型不匹配的详情。
3. ValueError
    当操作或函数接收到具有正确类型但值不适合的参数，并且情况不能用更精确的异常例如 IndexError 来描述时将被引发
4. RuntimeError
    当检测到一个不归属于任何其他类别的错误时将被引发。 关联的值是一个指明究竟发生了什么问题的字符串
5. AssertionError
    当assert语句失败时将被引发
...

OS异常
# 警告



"""